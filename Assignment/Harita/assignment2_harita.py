# -*- coding: utf-8 -*-
"""assignment2_harita

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IAl41HX7xVUHi5xJAVswzX0PwoA5JdY1
"""



from google.colab import drive  
drive.mount('/content/drive')

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

"""UNIVARIATE"""

model=pd.read_csv("/content/drive/MyDrive/assignment_2 ")

model.info

model['NumOfProducts'].mean()

model['EstimatedSalary'].median()

model['Balance'].std()

model['Age'].mode()

model['Geography'].value_counts()

model.skew

model.kurtosis

model.boxplot(column=['CreditScore'], grid=False, color='red')

model.hist(column='Tenure', grid=False, edgecolor='green')

sns.kdeplot(model['Balance'],fill=True)

model.describe()

sns.distplot(model['Tenure'])
import warnings
warnings.filterwarnings('ignore')
import seaborn as sns

"""BIVARIATE"""

#Scatterplot

plt.figure(figsize=(50,50))
plt.scatter(model.RowNumber,model.EstimatedSalary)
plt.title('RowNumber vs. EstimatedSalary')
plt.xlabel('RowNumber')
plt.ylabel('EstimatedSalary')

#Correlation

model.corr()

import statsmodels.api as sm

y = model['IsActiveMember']
x = model[['CustomerId']]
x = sm.add_constant(x)
df = sm.OLS(y, x).fit()
print(df.summary())

import warnings
warnings.filterwarnings('ignore')
import seaborn as sns

sns.jointplot(model['CustomerId'],model['NumOfProducts'])

"""MULTIVARIATE"""

sns.pairplot(model)

"""Perform descriptive statistics on the dataset"""

model.info()

model.describe()

model['Geography'].value_counts()

model['CreditScore'].skew()

model['CreditScore'].kurtosis()

"""Handle the Missing values."""

model.isna()

df=pd.DataFrame({'roll no':[1,2,3,np.nan],'marks':[5,7,np.nan,np.nan],'attendance':[np.nan,25,23,20]})
df

df.isna()

df.dropna()

df

df['roll no'].mean()

df['marks'].mean()

df['attendance'].mean()

"""Find the outliers and replace the outliers"""

import pandas as pd
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

dataset = pd.read_csv("/content/drive/MyDrive/assignment_2 ")

dataset

sns.boxplot(dataset['Age'])

q1=dataset['Age'].quantile(0.25)
q3=dataset['Age'].quantile(0.75)
iqr=q3-q1
upper=q3+(1.5*iqr)
lower=q1-(1.5*iqr)

dataset.loc[(dataset['Age']>upper)|(dataset['Age']<lower)]

dataset.loc[(dataset['Age']>upper)|(dataset['Age']<lower)]

new=dataset.copy()
new.loc[(new['Age']>upper),'Age']=upper
new.loc[(new['Age']<lower),'Age']=lower

sns.boxplot(new['Age'])

"""Check for Categorical columns and perform encoding."""

dataset['Gender'].replace({'Male':1,'Female':0},inplace=True)
dataset

import pandas as pd

datamain=pd.get_dummies(dataset,columns=['Geography'])
datamain

"""split the data into dependent and independent variables"""

y=datamain['Balance']
y

x=datamain.drop(columns=['Balance'],axis=1)
x.head()

"""scale the independent variables"""

z=datamain.drop(columns=['Surname'],axis=1)
z.head()

from sklearn.preprocessing import scale

z=scale(z)
z

"""Split the data into training and testing"""

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

X = model.iloc[:, :-1]
y = model.iloc[:, -1]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.05, random_state=0)
X_train

y_train

"""# New Section"""